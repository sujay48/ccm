<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="java.util.LinkedHashMap"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestControllerAdvice"/>
    <fullyQualifiedTypeName name="javax.validation.Valid"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="org.junit.Test"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="com.cognizant.ccm.repository.GatewaySettingsParameterRepository"/>
    <fullyQualifiedTypeName name="org.junit.BeforeClass"/>
    <fullyQualifiedTypeName name="com.cognizant.ccm.service.GatewaySettingsServiceImpl"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.cognizant.ccm.service.GatewaySettingsMapper"/>
    <fullyQualifiedTypeName name="com.cognizant.ccm.client.AuthorizationFallbackFactory"/>
    <fullyQualifiedTypeName name="com.cognizant.ccm.CcmApplicationTests"/>
    <fullyQualifiedTypeName name="com.cognizant.ccm.CcmApplication"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="com.cognizant.ccm.exception.GatewaySettingsParametersNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpHeaders"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.web.context.request.WebRequest"/>
    <fullyQualifiedTypeName name="com.cognizant.ccm.client.AuthorizationFeignClient"/>
    <fullyQualifiedTypeName name="org.mockito.Mock"/>
    <fullyQualifiedTypeName name="com.cognizant.ccm.service.GatewaySettingsSerivce"/>
    <fullyQualifiedTypeName name="org.mockito.InjectMocks"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Test"/>
    <fullyQualifiedTypeName name="com.cognizant.ccm.model.AuthResponse"/>
    <fullyQualifiedTypeName name="com.cognizant.ccm.controller.GatewaySettingsController"/>
    <fullyQualifiedTypeName name="com.cognizant.ccm.model.GatewaySettings"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.extension.ExtendWith"/>
    <fullyQualifiedTypeName name="org.mockito.junit.jupiter.MockitoExtension"/>
    <fullyQualifiedTypeName name="com.cognizant.ccm.exception.InvalidTokenException"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="com.sun.xml.bind.v2.schemagen.xmlschema.Any"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.BadCredentialsException"/>
    <fullyQualifiedTypeName name="com.cognizant.authorization.model.AuthResponse"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.cache.RedisCacheManagerBuilderCustomizer"/>
    <fullyQualifiedTypeName name="org.springframework.data.redis.cache.RedisCacheConfiguration"/>
    <fullyQualifiedTypeName name="java.time.Duration"/>
    <fullyQualifiedTypeName name="com.cognizant.ccm.model.GatewaySettingsParameters"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.ImportAutoConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.cache.annotation.EnableCaching"/>
    <fullyQualifiedTypeName name="org.springframework.cache.annotation.Cacheable"/>
    <fullyQualifiedTypeName name="org.mockito.Mockito"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Configurable"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.data.redis.repository.configuration.EnableRedisRepositories"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"/>
    <fullyQualifiedTypeName name="org.springframework.data.redis.connection.RedisStandaloneConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.data.redis.core.RedisTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.data.redis.serializer.StringRedisSerializer"/>
    <fullyQualifiedTypeName name="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
    <fullyQualifiedTypeName name="java.io.Serializable"/>
</qualifiedTypeNameHistroy>
